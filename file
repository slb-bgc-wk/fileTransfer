

// shared-data.service.ts
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import { share } from 'rxjs/operators';

@Injectable({
  providedIn: 'root',
})
export class SharedDataService {
  private dataSubject = new Subject<any>();
  sharedData$ = this.dataSubject.asObservable().pipe(share());

  sendData(data: any) {
    this.dataSubject.next(data);
  }
}


// component-a.component.ts
import { Component, OnInit } from '@angular/core';
import { SharedDataService } from 'path-to-shared-data.service';

@Component({
  selector: 'app-component-a',
  template: `
    <div>
      <h2>Component A</h2>
      <button (click)="sendData()">Send Data from A</button>
    </div>
  `,
})
export class ComponentAComponent implements OnInit {
  constructor(private sharedDataService: SharedDataService) {}

  ngOnInit() {}

  sendData() {
    this.sharedDataService.sendData('Data from Component A');
  }
}


// component-b.component.ts
import { Component, OnInit } from '@angular/core';
import { SharedDataService } from 'path-to-shared-data.service';

@Component({
  selector: 'app-component-b',
  template: `
    <div>
      <h2>Component B</h2>
      <p>{{ receivedData }}</p>
    </div>
  `,
})
export class ComponentBComponent implements OnInit {
  receivedData: any;

  constructor(private sharedDataService: SharedDataService) {}

  ngOnInit() {
    this.sharedDataService.sharedData$.subscribe((data) => {
      this.receivedData = data;
    });
  }
}
